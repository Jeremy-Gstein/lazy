###############################################
# HELP / INSTALL / VERSION / SHELL COMPLETION #
###############################################
# Help menu and version tag
lazy_help() {
  if [[ "$1" == "$VERSION" ]]; then
    echo "$VERSION_TAG"
    exit 0
  fi
  cat <<'EOF'
Name:
  lazy - manage your project containers. (the lazy way)

Description:  
  lazy is a tool inspired by cargo and other similar tools.
  build, run, remove, watch, initialize projects with dockerfiles.
  any specific changes needed for a given projet can be configured 
  with the .lazy file by setting variables. See Eamples. 

Synopsis: 
  lazy [OPTIONS]

Options:
[CORE]
  -b,  --build            Build the container from .lazy.
  -r,  --run              Run the container from .lazy.
  -rm, --remove           Remove existing container and its image. 
  -w,  --watch            Rebuild on changes to files in current dir.
  -n,  --new              Initialize/Setup project with default .lazy file.
[CONFIG/HELP]
  -h,  --help             Show this help menu.
  -v,  --version          Show current version of lazy.
  --complete              Add shell completetion for all lazy commands.
  --install               Install lazy to ~/.local/share, ~/.config/.lazy
  --update                Update lazy from remote githup repo. 

Examples:
LAZY:
  lazy --help 
  lazy -rm
  lazy b r 

.LAZY FILE: 
  NAME="FOO
  IMAGE="BAR"
  DOCKERFILE="/path/to/dockerfile"

Author:
  Jeremy Grosenstein - jeremy51b5@pm.me

License:
  MIT License
  Copyright (c) 2025 Jeremy
  Licensed under the MIT License. See LICENSE file in the project root for details.
  A copy can be found online at this github repo: https://github.com/Jeremy-Gstein/lazy/blob/main/LICENSE
  
EOF
echo "$VERSION_TAG"
}

# lazy fish shell completion
_lazy_fish_complete() {
  cat <<'EOF'
# Fish completion and description for lazy
complete -c lazy -a build -d "Build the container"
complete -c lazy -a run -d "Run the container"
complete -c lazy -a rm -d "Remove container and image"
complete -c lazy -a watch -d "Watch for changes and rebuild"
complete -c lazy -a new -d "Add default lazy files in current directory."
complete -c lazy -a version -d "Print lazy version."
complete -c lazy -a help -d "Show help"
complete -c lazy -a update -d "Update to latest lazy version."
# just shell completion for lazy no description
complete -c lazy -l help 
complete -c lazy -l build
complete -c lazy -l run 
complete -c lazy -l rm
complete -c lazy -l watch
complete -c lazy -l help 
complete -c lazy -l complete 
complete -c lazy -l version 
complete -c lazy -l new
complete -c lazy -l update
EOF
}

# lazy bash shell completion
_lazy_bash_complete() {
  cat <<'EOF'
_lazy_completion() {
  local cur opts
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  opts="build run remove rm watch w help -h --help --completion"

  COMPREPLY=( $(compgen -W "$opts" -- "$cur") )
  return 0
}
complete -F _lazy_completion lazy.sh lazy ./lazy.sh
EOF
}

# print examples of shell complete for lazy.
lazy_shell_complete() {
  echo "Bash Completion:"
  _lazy_bash_complete
  echo
  echo "source <(~/.local/bin/lazy --complete=bash)"
  echo 'alias lazy="~/.local/bin/lazy"'
  echo "Fish Completion:"
  _lazy_fish_complete
  echo
  echo "save to ~/.config/fish/completions/lazy.fish"
  echo "./lazy.sh --complete=fish > ~/.config/fish/completions/lazy.fish"
}


