####################
# INSTALL / UPDATE #
####################

# update to latest lazy version from main branch.
lazy_update() {
  INSTALL_TARGET="$HOME/.local/share/lazy"
  REPO_URL="https://raw.githubusercontent.com/Jeremy-Gstein/lazy"
  MAIN_BRANCH="main/lazy.sh"
  REPO="$REPO_URL/$MAIN_BRANCH"
  LATEST_VERSION=$(curl -fsSL \
    https://api.github.com/repos/Jeremy-Gstein/lazy/releases/latest \
    | jq -r .tag_name)
 
  # check if we have lazy Installed
  if [[ ! -f "$INSTALL_TARGET" ]]; then
    echo "lazy not found. Run install first!."
    return 1
  fi

  CURRENT_VERSION=$(head -n 1 "$INSTALL_TARGET" | \
    grep -oP 'VERSION="(\K[0-9]+\.[0-9]+\.[0-9]+)')

  # create a tempfile and curl main to it.
  tmpfile=$(mktemp)
  if ! curl -fsSL "$REPO" -o "$tmpfile"; then
    echo "Error: failed to fetch $REPO"
    rm -f "$tmpfile"
    return 1
  fi

  # check if local and remote in sync.
  if ! diff -q "$tmpfile" "$INSTALL_TARGET" >/dev/null; then
    mv "$tmpfile" "$INSTALL_TARGET"
    chmod +x "$INSTALL_TARGET"
    echo "Updated lazy: $MAIN_BRANCH -> $INSTALL_TARGET"
  else
    echo "No Update: $INSTALL_TARGET in sync with $MAIN_BRANCH"
    rm "$tmpfile"
  fi
}

# install lazy to ~/.local/bin 
# create ~/.config/.lazy file 
lazy_install() {
  LINK_TARGET="$HOME/.local/bin/lazy"
  INSTALL_TARGET="$HOME/.local/share/lazy"
  CONFIG_PATH="$HOME/.config/.lazy"
  cp ./lazy.sh "$INSTALL_TARGET"
  chmod +x "$INSTALL_TARGET"
  touch "$CONFIG_PATH"
  # check if lazy exists and ask to delete it before linking.
  if [[ -e "$LINK_TARGET" ]]; then
    read -p "Found lazy at $LINK_TARGET. Delete and replace it? [y/N]: " choice
    case "$choice" in 
      y|Y)
        rm -f "$LINK_TARGET"
        ln -s $INSTALL_TARGET $LINK_TARGET
        sleep 1
        clear
        echo "Installed new lazy -> $LINK_TARGET"
        ;;
      *)
        echo "Canceled install NOT overwriting existing lazy ($LINK_TARGET)"
        exit 0
        ;;
    esac
  elif [[ -e ~/.local/bin ]]; then
    # Check if ~/.local/bin exists before linking 
    ln -s "$INSTALL_TARGET" "$LINK_TARGET"
    echo "Installed lazy -> ~/.local/bin/lazy"
  else
    # If we dont find ~/.local/bin ask to create a new
    read -p "Missing $LINK_TARGET directory... 
             > Create the directory now? [y/N]: " choice
    case "$choice" in 
      y|Y)
        mkdir '~/.local/bin' && \ 
          ln -s $INSTALL_TARGET $LINK_TARGET
        sleep 1
        clear
        echo "Installed new lazy -> $LINK_TARGET"
        ;;
      n|N)
        echo "Canceled install NOT overwriting existing lazy ($LINK_TARGET)"
        exit 0
        ;;
      *)
        echo "Error Installing... Unable to find valid path." 
        exit 1
        ;;
    esac
  fi 
  # PATH/alias examples:
  echo; echo
  echo "if $INSTALL_TARGET not in PATH:
  install for system (requires root/sudo)
        # sudo ln -sf $INSTALL_TARGET $LINK_TARGET
        
  add as alias to .bashrc
        # alias --save $LINK_TARGET"

}


